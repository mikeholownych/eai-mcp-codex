"""Legacy editable installation process, i.e. `setup.py develop`.
"""
import logging
from typing import Optional, Sequence

from pip._internal.build_env import BuildEnvironment
from pip._internal.utils.logging import indent_log
from pip._internal.utils.setuptools_build import make_setuptools_develop_args
from pip._internal.utils.subprocess import call_subprocess

logger = logging.getLogger(__name__)


def install_editable(
    *,
    global_options: Sequence[str],
    prefix: Optional[str],
    home: Optional[str],
    use_user_site: bool,
    name: str,
    setup_py_path: str,
    isolated: bool,
    build_env: BuildEnvironment,
    unpacked_source_directory: str,
) -> None:
    """
    Install a package in editable (setuptools "develop") mode.
    
    Constructs the setuptools `develop` command from the given options and executes it
    inside the provided build environment with the working directory set to the
    unpacked source directory. The function logs the operation and runs a subprocess
    invoking `python setup.py develop`.
    
    Parameters:
        name: Used only for logging to indicate which package is being installed.
        setup_py_path: Path to the project's `setup.py` to use when building the
            develop command.
        isolated: If True, prevents reading user-level setuptools/pip configuration
            when constructing the develop command.
        unpacked_source_directory: Directory to use as the subprocess working
            directory (where `setup.py` will be executed).
    
    Note:
        Other arguments (global_options, prefix, home, use_user_site) are passed
        through to setuptools when building the develop command. The `build_env`
        parameter is a build environment context manager and is not documented here
        as a generic service object.
    """
    logger.info("Running setup.py develop for %s", name)

    args = make_setuptools_develop_args(
        setup_py_path,
        global_options=global_options,
        no_user_config=isolated,
        prefix=prefix,
        home=home,
        use_user_site=use_user_site,
    )

    with indent_log():
        with build_env:
            call_subprocess(
                args,
                command_desc="python setup.py develop",
                cwd=unpacked_source_directory,
            )
