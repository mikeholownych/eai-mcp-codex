from typing import Optional

from pip._internal.distributions.base import AbstractDistribution
from pip._internal.index.package_finder import PackageFinder
from pip._internal.metadata import BaseDistribution


class InstalledDistribution(AbstractDistribution):
    """Represents an installed package.

    This does not need any preparation as the required information has already
    been computed.
    """

    @property
    def build_tracker_id(self) -> Optional[str]:
        """
        Return the build tracker identifier for this distribution.
        
        Installed distributions have no build step to track, so this property always returns None.
        
        Returns:
            Optional[str]: Always None.
        """
        return None

    def get_metadata_distribution(self) -> BaseDistribution:
        """
        Return the already-installed distribution object for this requirement.
        
        Returns:
            BaseDistribution: The installed distribution tied to this requirement.
        
        Raises:
            AssertionError: If the requirement is not satisfied (i.e., the package is not actually installed).
        """
        assert self.req.satisfied_by is not None, "not actually installed"
        return self.req.satisfied_by

    def prepare_distribution_metadata(
        self,
        finder: PackageFinder,
        build_isolation: bool,
        check_build_deps: bool,
    ) -> None:
        """
        No-op preparation for already-installed distributions.
        
        This distribution is already installed and requires no metadata preparation; any provided
        arguments (finder, build_isolation, check_build_deps) are accepted but ignored.
        """
        pass
