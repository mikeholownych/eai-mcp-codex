from pip._internal.distributions.base import AbstractDistribution
from pip._internal.distributions.sdist import SourceDistribution
from pip._internal.distributions.wheel import WheelDistribution
from pip._internal.req.req_install import InstallRequirement


def make_distribution_for_install_requirement(
    install_req: InstallRequirement,
) -> AbstractDistribution:
    """
    Return a concrete Distribution instance appropriate for the given InstallRequirement.
    
    Editable requirements are always treated as a SourceDistribution (legacy behavior).
    If the requirement is a wheel (install_req.is_wheel is True), a WheelDistribution is returned;
    otherwise a SourceDistribution is returned.
    
    Parameters:
        install_req (InstallRequirement): Requirement to create a distribution for.
    
    Returns:
        AbstractDistribution: A concrete distribution (SourceDistribution or WheelDistribution) for the requirement.
    """
    # Editable requirements will always be source distributions. They use the
    # legacy logic until we create a modern standard for them.
    if install_req.editable:
        return SourceDistribution(install_req)

    # If it's a wheel, it's a WheelDistribution
    if install_req.is_wheel:
        return WheelDistribution(install_req)

    # Otherwise, a SourceDistribution
    return SourceDistribution(install_req)
