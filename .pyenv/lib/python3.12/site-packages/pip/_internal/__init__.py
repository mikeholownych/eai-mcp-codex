from typing import List, Optional

from pip._internal.utils import _log

# init_logging() must be called before any call to logging.getLogger()
# which happens at import of most modules.
_log.init_logging()


def main(args: (Optional[List[str]]) = None) -> int:
    """
    Compatibility shim for legacy console scripts; delegates execution to the pip entry point wrapper.
    
    This function preserves the old public `main` entry point for scripts that still reference it. It forwards the optional argument list to pip._internal.utils.entrypoints._wrapper and returns that wrapper's integer exit code.
    
    Parameters:
        args: Optional list of command-line arguments to pass to the pip entry point (defaults to None, which lets the wrapper use sys.argv).
    
    Returns:
        int: Exit code returned by the pip entry point wrapper.
    """
    from pip._internal.utils.entrypoints import _wrapper

    return _wrapper(args)
