name: CI
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      TESTING_MODE: "true"
      OTEL_SDK_DISABLED: "true"
      JAEGER_ENABLED: "false"
      OTLP_ENABLED: "false"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONUNBUFFERED: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'cli/package-lock.json'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff mypy pip-audit
      - name: Install Node deps
        working-directory: cli
        run: npm ci
      - name: Typecheck (mypy) and TS build
        run: |
          mypy .
          npm run build --prefix cli
      - name: Lint (ruff, eslint)
        run: |
          ruff check .
          npm run lint --prefix cli
      - name: Run tests
        run: make test
      - name: Build core containers
        run: |
          docker build -t mcp-base -f docker/base.Dockerfile .
          docker build -t mcp-model-router -f docker/model-router.Dockerfile .
      - name: Security scans (pip-audit, npm audit)
        run: |
          pip-audit -r requirements.txt --strict
      # Before:
-     npm audit --omit=dev --audit-level=high --prefix cli || true
      # After:
      npm audit --omit=dev --audit-level=high --prefix cli
      - name: Secret scan (gitleaks)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-git --redact
      - name: Trivy scan images
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: mcp-model-router
          format: 'table'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
  helm-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4
      - name: Helm lint
        run: helm lint ./helm/mcp-services
