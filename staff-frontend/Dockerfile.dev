# Development Dockerfile for Staff Frontend
FROM node:18-alpine

LABEL org.opencontainers.image.source="https://github.com/mikeholownych/mcp"
LABEL org.opencontainers.image.licenses="MIT"
LABEL org.opencontainers.image.version="1.0.0"

# Install system dependencies with security updates
RUN apk add --no-cache --update \
    libc6-compat \
    dumb-init \
    curl \
    && apk upgrade

# Environment setup for development
ENV NODE_ENV=development \
    NEXT_TELEMETRY_DISABLED=1 \
    PORT=3001

WORKDIR /app

# Create non-root user for security
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs --ingroup nodejs

# Copy package files with proper ownership
COPY --chown=nextjs:nodejs package.json package-lock.json* ./

# Install ALL dependencies (including devDependencies for development)
RUN npm ci --frozen-lockfile && \
    npm cache clean --force

# Copy source code with proper ownership
COPY --chown=nextjs:nodejs . .

# Switch to non-root user
USER nextjs

# Expose port (staff frontend on different port)
EXPOSE 3001

# Health check (with more lenient timing for dev)
HEALTHCHECK --interval=45s --timeout=15s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3001/api/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Development server with hot reloading
CMD ["npm", "run", "dev"]