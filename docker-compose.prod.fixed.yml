# Docker Compose Production Configuration - Fixed Version
# All fluentd logging replaced with json-file to avoid DNS resolution issues

version: '3.8'

services:
  # Core Infrastructure Services
  a2a-communication:
    build:
      context: .
      dockerfile: docker/a2a-communication.Dockerfile
    environment:
      - LOG_LEVEL=INFO
      - MAX_CONCURRENT_REQUESTS=100
      - REQUEST_TIMEOUT=30
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  plan-management:
    build:
      context: .
      dockerfile: docker/plan-management.Dockerfile
    environment:
      - LOG_LEVEL=INFO
      - AUTO_BACKUP=true
      - BACKUP_INTERVAL=1800
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 768M
          cpus: '0.8'
        reservations:
          memory: 384M
          cpus: '0.4'
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  git-worktree-manager:
    build:
      context: .
      dockerfile: docker/git-worktree.Dockerfile
    environment:
      - LOG_LEVEL=INFO
      - AUTO_CLEANUP=true
      - CLEANUP_INTERVAL=3600
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.6'
        reservations:
          memory: 256M
          cpus: '0.3'
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  workflow-orchestrator:
    build:
      context: .
      dockerfile: docker/workflow-orchestrator.Dockerfile
    environment:
      - LOG_LEVEL=INFO
      - MAX_CONCURRENT_WORKFLOWS=5
      - STEP_TIMEOUT=3600
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    restart: always
    networks:
      - mcp-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  verification-feedback:
    build:
      context: .
      dockerfile: docker/verification-feedback.Dockerfile
    environment:
      - LOG_LEVEL=INFO
      - FEEDBACK_RETENTION_DAYS=90
      - AUTO_ARCHIVE=true
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  staff-service:
    build:
      context: .
      dockerfile: docker/staff-service.Dockerfile
    environment:
      - LOG_LEVEL=INFO
      - SESSION_TIMEOUT=3600
      - MAX_LOGIN_ATTEMPTS=5
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 768M
          cpus: '0.6'
        reservations:
          memory: 384M
          cpus: '0.3'
    restart: always
    networks:
      - mcp-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Customer Frontend React/Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mcp-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://nginx/api
      - PORT=3000
    ports:
      - "3002:3000"
    # Remove volume mount to avoid permission issues
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Staff Frontend React/Next.js Application
  staff-frontend:
    build:
      context: ./staff-frontend
      dockerfile: Dockerfile
    container_name: mcp-staff-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://nginx/api/staff
      - PORT=3001
    ports:
      - "3001:3001"
    # Remove volume mount to avoid permission issues
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Remove development tools in production
  dev-tools:
    profiles:
      - dev

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.50.0.0/16

volumes:
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  postgres_data:
    driver: local
  consul_data:
    driver: local
  plan_storage:
    driver: local
  git_repositories:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local