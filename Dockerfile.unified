# Unified multi-stage Dockerfile for all MCP services
FROM python:3.11-slim as base

LABEL org.opencontainers.image.source="https://github.com/mikeholownych/mcp"
LABEL org.opencontainers.image.licenses="MIT"
LABEL org.opencontainers.image.version="1.0.0"

# Security hardening
USER root

# Install system dependencies with security updates
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
        curl \
        git \
        build-essential \
        ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user with consistent pattern
RUN groupadd --system --gid 1001 mcp && \
    useradd --system --uid 1001 --gid 1001 --create-home --shell /bin/bash mcp

WORKDIR /app
RUN chown mcp:mcp /app && chmod 750 /app

# Python environment variables
ENV PYTHONPATH=/app \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install Python dependencies (with fallback if requirements.txt doesn't exist)
COPY requirements.txt* ./
RUN if [ ! -f requirements.txt ]; then \
        echo "fastapi>=0.68.0\nuvicorn[standard]>=0.15.0\npsycopg2-binary>=2.9.0\npydantic>=1.8.0" > requirements.txt; \
    fi && \
    pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy common utilities with proper ownership
COPY --chown=mcp:mcp src/common/ ./common/
COPY --chown=mcp:mcp config/ ./config/

# Health check script
COPY --chown=mcp:mcp scripts/health_check.py ./health_check.py
RUN chmod +x ./health_check.py

# Create logs directory
RUN mkdir -p /app/logs && chown mcp:mcp /app/logs

USER mcp

# ==============================================
# MODEL ROUTER SERVICE
# ==============================================
FROM base as model-router
COPY --chown=mcp:mcp src/model_router/ ./
COPY --chown=mcp:mcp scripts/start_model_router.py ./start.py

EXPOSE 8001
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python health_check.py --service=model-router --port=8001
CMD ["python", "start.py"]

# ==============================================
# PLAN MANAGEMENT SERVICE
# ==============================================
FROM base as plan-management
COPY --chown=mcp:mcp src/plan_management/ ./
COPY --chown=mcp:mcp scripts/start_plan_management.py ./start.py

EXPOSE 8002
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python health_check.py --service=plan-management --port=8002
CMD ["python", "start.py"]

# ==============================================
# GIT WORKTREE SERVICE
# ==============================================
FROM base as git-worktree
COPY --chown=mcp:mcp src/git_worktree/ ./
COPY --chown=mcp:mcp scripts/start_git_worktree.py ./start.py

EXPOSE 8003
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python health_check.py --service=git-worktree --port=8003
CMD ["python", "start.py"]

# ==============================================
# WORKFLOW ORCHESTRATOR SERVICE
# ==============================================
FROM base as workflow-orchestrator
# Install additional dependencies for workflow management
RUN pip install --no-cache-dir \
    celery \
    redis \
    requests

COPY --chown=mcp:mcp src/workflow_orchestrator/ ./
COPY --chown=mcp:mcp scripts/start_workflow_orchestrator.py ./start.py

EXPOSE 8004
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python health_check.py --service=workflow-orchestrator --port=8004
CMD ["python", "start.py"]

# ==============================================
# VERIFICATION FEEDBACK SERVICE
# ==============================================
FROM base as verification-feedback
COPY --chown=mcp:mcp src/verification_feedback/ ./
COPY --chown=mcp:mcp scripts/start_verification_feedback.py ./start.py

EXPOSE 8005
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python health_check.py --service=verification-feedback --port=8005
CMD ["python", "start.py"]